[Chunk 1/2 - chunk_001.wav]
¡Hola!

[Chunk 2/2 - chunk_000.wav]
Bueno, la idea acá un poquito es como que alineemos para pasarle formalmente la solicitud a Nelson de lo que estuvimos hablando para que ellos puedan ir testeando el código. Sé que vos comentaste que en la mañana tuviste como alguna novedad con, no recuerdo con qué, pero... Con las dependencias. Ah, ok. No me funcionó. No? No sé si ahí Nemias puede darle más profundidad, pero lo intenté por varias partes y no pude. Entonces, claro, está apoyando más que todo, pero eso debería estar el equipo de ellos armando esos paquetes. Entonces, no quisiera más tiempo porque ayer perdí casi todo el día y no avancé. Y no avancé con el desarrollo, entonces ya hoy lo dejé ahí. Entonces no sé si Nemias lo puede tomar. Sí, sí, sí. Si algo yo tomo eso con Nemias, que él está un poquito más enterado, me imagino, y ahí miramos esa parte. Pero digamos, suponiendo que digamos que esa parte la resolvemos por un lado. Para solicitarle a Nelson, no sé si vieron poderme que les compartí más o menos, es como la estructura que pienso compartirle a Nelson. Si estaríamos alineados de hacerlo como él lo planteó, verdad? O sea, no tendríamos ninguna novedad. Sí, hay que crear un pipeline nuevo, que esté en master de nuestro código y lo publica ya. Usando un solo usuario, es más fácil. Entonces de él necesitaríamos inicialmente un usuario de GitHub, cierto? Sí, de ellos. De ellos, bien. Y en cuanto a, ah bueno, y la creación de la rama y eso me imagino que también va a depender de ellos. Sí. Bien. Y en cuanto a repositorios, tengo la duda ahí, porque yo sé que ahí tenemos varios repositorios del lado de nosotros. Sí, de uno por cada uno, o sea, como estamos nosotros, uno más tres, que es el front, y el BFF y el otro, pero siempre va a ser por cada microservicio un repo. Ok, o sea, la solicitud tiene que ir con, de momento, los tres repositorios que estamos trabajando. Frontend y los dos de backend, ¿sí? Sí, perfecto. Listo. Ahí tengo la duda, Oscar. Me dice por cada microservicio es un repositorio, o sea, en teoría del backend necesitaríamos cuántos repos, o con uno solo saldríamos. Creo que estaba muteado, Oscar. Oscar. ¿Me escuchas? Que bueno, que entonces, digamos que tú me has dicho que por cada microservicio se necesitaría un repositorio. No sé si otra vez estás muteado. Ah, creo que cayó. Bueno, pues el lado de Fabri creo que sí no habría mayor novedad. Justo tenía una duda, porque la idea es que cuando usamos cambios en la rama master, hacerlos también en el repositorio de ellos, ¿no? Sí, sí, sí. O sea, la idea es, bueno, más o menos lo que contó Oscar, la idea es que tenemos que crear otro pipeline, que tal cual que cuando nosotros, bueno, cuando vos subas los cambios, se corra ese nuevo pipeline, que lo que va a hacer es coger ese código y lo va a publicar en el repositorio de Ironman. Y ya internamente ellos se encargan allá de correr sus procesos para levantar esa parte. Lo que yo tenía duda, porque nosotros usamos la rama master hoy en día para nuestro test. Sí, ahí digamos... Hola, hola, Oscar. ¿Me escuchas? Sí, te escuchamos bien. No, lo que yo decía es que ellos igual tienen que crear un repositorio en su lado, pues, y nosotros ir publicando. Ya bueno, ellos nos definirán qué rama y todo eso, pero inicialmente por cada repo nosotros tiene que haber un repo de ellos. Ok, ok. Y bueno, y lo que les pedía ahí, ustedes me pueden pasar, digamos, o responderme el correo con los repositorios tal cual como los tenemos, y yo armo ese correo haciéndoles saber a ellos. ¿Ustedes tienen acceso? Sí, yo te paso los que corresponderían del lado del banco. Sí, sí, sí. Y, ah, bueno, estaba hablando con Fabri, que ahí el tema es que nosotros, la idea es esto, crear otro pipeline, crear otro pipeline que se va a encargar de, una vez termine de correr el pipeline de nosotros, lo que va a hacer es, una vez publicado ese pipeline, coger ese código y publicarlo en el repositorio que ellos nos habiliten, y ya, digamos, eso queda como en lado de ellos para que ellos levanten. Ya nosotros... Sí, la duda que tengo es, o sea, nuestra versión es la de ellos para estar a la par. Es así. De lo que vayamos subiendo, sí. O sea, se supone que lo que vayamos subiendo nosotros, ellos lo van a ir teniendo, para que ellos lo vayan testeando, lo vayan revisando y vayan dando el feedback. Ok. Pero lo que vos comentabas, bueno, que nosotros tenemos en la rama main para hacer el deploy y el testing, ¿sí? Entonces, la duda de pronto es... O sea, lo sacamos, como estoy armando yo, el de develop. La idea es que cuando pasemos a main o a master, ahí ya de esa rama se saca lo otro. Ok. Listo. Entonces, para front deberíamos hacer lo mismo, Fabri. Que crear la rama de desarrollo, que es donde vos estás testeando inicialmente, cuando ya esté testeado pasan a la master y de la master sí se lleva ya a Aeroman el código. Ok. Bien. Ahí también voy a necesitar ayuda con Nemi para que ajuste el pipeline. Para que tomen la otra rama. Listo. Si algo ahí tomen, lo anotamos y ahorita si algo con Nemi revisamos ese tema. El pipeline necesita que... Porque si es solo desplegarlo en el GitHub de ellos, la parte de front se podría agregando más código al pipeline y ya está, ¿no? No creando uno más. Ahí yo. Es mejor que tengamos un pipeline de deploy interno y un pipeline de como entrega. Sí, para... Un mismo pipeline para... Sí, sí. Pero no necesariamente necesitas que cada vez que se corra el pipeline se despliegue en el... O sea, o se copie en el repositorio de ellos. Sino que lo tienes que correr manual. Un pipeline de entrega, de delivery. Lo que esté en master, lo que se ejecuta a demanda. Que no se ejecuta como que ellos ejecuten desarrollo. Porque no es que cada vez que tú hagas un push, si tú te metes y le das correr, toma lo que esté en master y lo pasa para el cliente. Pero no a cada rato. Claro, que sea manual. Cuando quieras pasar, que sea manual. Sí, cuando ya esté... Ok. Sí, sí, sí. Lo que voy a decir son dos pipelines. Uno para deploy, generación de imagen y todo en desarrollo. Que es lo que yo tengo en back. No sé cómo está en front. Y otro para que tome el código de master o main y lo lleve al cliente. Entonces, por cada repo van a haber... Por cada proyecto van a haber tres jobs. O tres repos. El de Jenkins normal de nosotros. El Jenkins que hace el deploy en el cliente y el proyecto con el código. Ok. Listo. Entonces, como para pasar en limpio, solo quería pedirles que si algo me copien el correo como los repositorios formales, como para hacerle la petición formalmente a Nelson. Y si algo ya ahorita con Nemi coordinamos para ver el tema de lo que tiene... Que lo que no funcionó hay que estar revisando, Oscar. Ahí tomamos ese tema y miramos a ver qué hacemos. Perfecto. Listo. Acá creo que no más, ¿cierto? No nos escapa nada más. No sé si algo más de pronto ahí que tengamos que poner en conocimiento. Creo que no, ¿cierto? Creo que no. Listo, chicos. Entonces yo armo el correo. Tan pronto me envíen eso y ya como para más dejar chequeado de nosotros y esperar la respuesta de ellos que nos pasen los usuarios y el token o lo que corresponda. Sí. Listo. Sin más. Le damos a Nemi y ahorita te escribo y miramos el otro tema, ¿vale? Vale, perfecto. Listo. Muchas gracias. Chao, chao. Chao.

